class Solution {
public:
    int islandPerimeter(vector<vector<int>>& grid) {
        int cnt = 0;
        for(int i = 0;i < grid.size();++i){
            for(int j = 0;j < grid[0].size();++j){
                if(grid[i][j] == 1) cnt = cnt + judge(grid, i, j);
            }
        }
        return cnt;
    }
    int judge(vector<vector<int>>& grid, int i, int j){
        int cnt = 0;
        if(i == 0) cnt = cnt + 1;
        else {
            if(grid[i - 1][j] == 0) cnt = cnt + 1;
        }
        if(j == (grid[0].size())-1)  cnt = cnt + 1;
        else{
            if(grid[i][j + 1] == 0) cnt = cnt + 1;
        }
        if(i == (grid.size())-1)  cnt = cnt + 1;
        else{
            if(grid[i + 1][j] == 0) cnt = cnt + 1;
        }
        if(j == 0) cnt = cnt + 1;
        else{
            if(grid[i][j - 1] == 0) cnt = cnt + 1;
        }
        return cnt;
    }
};
